/* 
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-beta
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Skymind.SKIL.Client;
using Skymind.SKIL.Api;
using Skymind.SKIL.Model;

namespace Skymind.SKIL.Test
{
    /// <summary>
    ///  Class for testing JobApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class JobApiTests
    {
        private JobApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new JobApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of JobApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' JobApi
            //Assert.IsInstanceOfType(typeof(JobApi), instance, "instance is a JobApi");
        }

        
        /// <summary>
        /// Test CreateJob
        /// </summary>
        [Test]
        public void CreateJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string jobIdOrType = null;
            //CreateJobRequest createJobRequest = null;
            //var response = instance.CreateJob(jobIdOrType, createJobRequest);
            //Assert.IsInstanceOf<JobEntity> (response, "response is JobEntity");
        }
        
        /// <summary>
        /// Test DeleteJobById
        /// </summary>
        [Test]
        public void DeleteJobByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? jobIdOrType = null;
            //instance.DeleteJobById(jobIdOrType);
            
        }
        
        /// <summary>
        /// Test DownloadJobOutputFile
        /// </summary>
        [Test]
        public void DownloadJobOutputFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? jobId = null;
            //DownloadOutputFileRequest downloadOutputFileRequest = null;
            //instance.DownloadJobOutputFile(jobId, downloadOutputFileRequest);
            
        }
        
        /// <summary>
        /// Test GetAllJobs
        /// </summary>
        [Test]
        public void GetAllJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllJobs();
            //Assert.IsInstanceOf<List<JobEntity>> (response, "response is List<JobEntity>");
        }
        
        /// <summary>
        /// Test GetJobById
        /// </summary>
        [Test]
        public void GetJobByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? jobIdOrType = null;
            //var response = instance.GetJobById(jobIdOrType);
            //Assert.IsInstanceOf<JobEntity> (response, "response is JobEntity");
        }
        
        /// <summary>
        /// Test RefreshJobStatus
        /// </summary>
        [Test]
        public void RefreshJobStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? jobId = null;
            //var response = instance.RefreshJobStatus(jobId);
            //Assert.IsInstanceOf<JobEntity> (response, "response is JobEntity");
        }
        
        /// <summary>
        /// Test RunAJob
        /// </summary>
        [Test]
        public void RunAJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? jobId = null;
            //var response = instance.RunAJob(jobId);
            //Assert.IsInstanceOf<JobEntity> (response, "response is JobEntity");
        }
        
    }

}

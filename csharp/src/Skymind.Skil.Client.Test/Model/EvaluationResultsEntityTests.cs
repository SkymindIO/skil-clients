/* 
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Skymind.Skil.Client.Api;
using Skymind.Skil.Client.Model;
using Skymind.Skil.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Skymind.Skil.Client.Test
{
    /// <summary>
    ///  Class for testing EvaluationResultsEntity
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EvaluationResultsEntityTests
    {
        // TODO uncomment below to declare an instance variable for EvaluationResultsEntity
        //private EvaluationResultsEntity instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of EvaluationResultsEntity
            //instance = new EvaluationResultsEntity();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EvaluationResultsEntity
        /// </summary>
        [Test]
        public void EvaluationResultsEntityInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" EvaluationResultsEntity
            //Assert.IsInstanceOf(typeof(EvaluationResultsEntity), instance);
        }


        /// <summary>
        /// Test the property 'Evaluation'
        /// </summary>
        [Test]
        public void EvaluationTest()
        {
            // TODO unit test for the property 'Evaluation'
        }
        /// <summary>
        /// Test the property 'EvalName'
        /// </summary>
        [Test]
        public void EvalNameTest()
        {
            // TODO unit test for the property 'EvalName'
        }
        /// <summary>
        /// Test the property 'ModelInstanceId'
        /// </summary>
        [Test]
        public void ModelInstanceIdTest()
        {
            // TODO unit test for the property 'ModelInstanceId'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Test]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'F1'
        /// </summary>
        [Test]
        public void F1Test()
        {
            // TODO unit test for the property 'F1'
        }
        /// <summary>
        /// Test the property 'Precision'
        /// </summary>
        [Test]
        public void PrecisionTest()
        {
            // TODO unit test for the property 'Precision'
        }
        /// <summary>
        /// Test the property 'Recall'
        /// </summary>
        [Test]
        public void RecallTest()
        {
            // TODO unit test for the property 'Recall'
        }
        /// <summary>
        /// Test the property 'Accuracy'
        /// </summary>
        [Test]
        public void AccuracyTest()
        {
            // TODO unit test for the property 'Accuracy'
        }
        /// <summary>
        /// Test the property 'Rmse'
        /// </summary>
        [Test]
        public void RmseTest()
        {
            // TODO unit test for the property 'Rmse'
        }
        /// <summary>
        /// Test the property 'Auc'
        /// </summary>
        [Test]
        public void AucTest()
        {
            // TODO unit test for the property 'Auc'
        }
        /// <summary>
        /// Test the property 'MeanAbsoluteError'
        /// </summary>
        [Test]
        public void MeanAbsoluteErrorTest()
        {
            // TODO unit test for the property 'MeanAbsoluteError'
        }
        /// <summary>
        /// Test the property 'MeanRelativeError'
        /// </summary>
        [Test]
        public void MeanRelativeErrorTest()
        {
            // TODO unit test for the property 'MeanRelativeError'
        }
        /// <summary>
        /// Test the property 'R2'
        /// </summary>
        [Test]
        public void R2Test()
        {
            // TODO unit test for the property 'R2'
        }
        /// <summary>
        /// Test the property 'EvalId'
        /// </summary>
        [Test]
        public void EvalIdTest()
        {
            // TODO unit test for the property 'EvalId'
        }
        /// <summary>
        /// Test the property 'EvalVersion'
        /// </summary>
        [Test]
        public void EvalVersionTest()
        {
            // TODO unit test for the property 'EvalVersion'
        }
        /// <summary>
        /// Test the property 'BinaryThreshold'
        /// </summary>
        [Test]
        public void BinaryThresholdTest()
        {
            // TODO unit test for the property 'BinaryThreshold'
        }
        /// <summary>
        /// Test the property 'BinaryThresholds'
        /// </summary>
        [Test]
        public void BinaryThresholdsTest()
        {
            // TODO unit test for the property 'BinaryThresholds'
        }

    }

}

/**
 * Endpoints
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-beta
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'ai/skymind/skil/model/CreateJobRequest', 'ai/skymind/skil/model/DownloadOutputFileRequest', 'ai/skymind/skil/model/JobEntity'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../ai/skymind/skil/model/CreateJobRequest'), require('../ai/skymind/skil/model/DownloadOutputFileRequest'), require('../ai/skymind/skil/model/JobEntity'));
  } else {
    // Browser globals (root is window)
    if (!root.SkilClient) {
      root.SkilClient = {};
    }
    root.SkilClient.JobApi = factory(root.SkilClient.ApiClient, root.SkilClient.CreateJobRequest, root.SkilClient.DownloadOutputFileRequest, root.SkilClient.JobEntity);
  }
}(this, function(ApiClient, CreateJobRequest, DownloadOutputFileRequest, JobEntity) {
  'use strict';

  /**
   * Job service.
   * @module ai/skymind/skil/JobApi
   * @version 1.2.0
   */

  /**
   * Constructs a new JobApi. 
   * @alias module:ai/skymind/skil/JobApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createJob operation.
     * @callback module:ai/skymind/skil/JobApi~createJobCallback
     * @param {String} error Error message, if any.
     * @param {module:ai/skymind/skil/model/JobEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a job
     * @param {module:ai/skymind/skil/model/String} jobIdOrType Job Type
     * @param {module:ai/skymind/skil/model/CreateJobRequest} createJobRequest Create job request object
     * @param {module:ai/skymind/skil/JobApi~createJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:ai/skymind/skil/model/JobEntity}
     */
    this.createJob = function(jobIdOrType, createJobRequest, callback) {
      var postBody = createJobRequest;

      // verify the required parameter 'jobIdOrType' is set
      if (jobIdOrType === undefined || jobIdOrType === null) {
        throw new Error("Missing the required parameter 'jobIdOrType' when calling createJob");
      }

      // verify the required parameter 'createJobRequest' is set
      if (createJobRequest === undefined || createJobRequest === null) {
        throw new Error("Missing the required parameter 'createJobRequest' when calling createJob");
      }


      var pathParams = {
        'jobIdOrType': jobIdOrType
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = JobEntity;

      return this.apiClient.callApi(
        '/jobs/{jobIdOrType}', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteJobById operation.
     * @callback module:ai/skymind/skil/JobApi~deleteJobByIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a job given its ID
     * @param {Number} jobIdOrType Job ID
     * @param {module:ai/skymind/skil/JobApi~deleteJobByIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteJobById = function(jobIdOrType, callback) {
      var postBody = null;

      // verify the required parameter 'jobIdOrType' is set
      if (jobIdOrType === undefined || jobIdOrType === null) {
        throw new Error("Missing the required parameter 'jobIdOrType' when calling deleteJobById");
      }


      var pathParams = {
        'jobIdOrType': jobIdOrType
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/jobs/{jobIdOrType}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the downloadJobOutputFile operation.
     * @callback module:ai/skymind/skil/JobApi~downloadJobOutputFileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download the output file from the job&#39;s execution. This will ONLY work if the job&#39;s run status is &#39;COMPLETE&#39;.
     * @param {Number} jobId Job ID
     * @param {module:ai/skymind/skil/model/DownloadOutputFileRequest} downloadOutputFileRequest Download output file request object
     * @param {module:ai/skymind/skil/JobApi~downloadJobOutputFileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.downloadJobOutputFile = function(jobId, downloadOutputFileRequest, callback) {
      var postBody = downloadOutputFileRequest;

      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling downloadJobOutputFile");
      }

      // verify the required parameter 'downloadOutputFileRequest' is set
      if (downloadOutputFileRequest === undefined || downloadOutputFileRequest === null) {
        throw new Error("Missing the required parameter 'downloadOutputFileRequest' when calling downloadJobOutputFile");
      }


      var pathParams = {
        'jobId': jobId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/jobs/{jobId}/outputfile', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllJobs operation.
     * @callback module:ai/skymind/skil/JobApi~getAllJobsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:ai/skymind/skil/model/JobEntity>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all available jobs
     * @param {module:ai/skymind/skil/JobApi~getAllJobsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:ai/skymind/skil/model/JobEntity>}
     */
    this.getAllJobs = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [JobEntity];

      return this.apiClient.callApi(
        '/jobs', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getJobById operation.
     * @callback module:ai/skymind/skil/JobApi~getJobByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:ai/skymind/skil/model/JobEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a job by its ID
     * @param {Number} jobIdOrType Job ID
     * @param {module:ai/skymind/skil/JobApi~getJobByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:ai/skymind/skil/model/JobEntity}
     */
    this.getJobById = function(jobIdOrType, callback) {
      var postBody = null;

      // verify the required parameter 'jobIdOrType' is set
      if (jobIdOrType === undefined || jobIdOrType === null) {
        throw new Error("Missing the required parameter 'jobIdOrType' when calling getJobById");
      }


      var pathParams = {
        'jobIdOrType': jobIdOrType
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = JobEntity;

      return this.apiClient.callApi(
        '/jobs/{jobIdOrType}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the refreshJobStatus operation.
     * @callback module:ai/skymind/skil/JobApi~refreshJobStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:ai/skymind/skil/model/JobEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Refresh the remote job status. Can be used for monitoring.
     * @param {Number} jobId Job ID
     * @param {module:ai/skymind/skil/JobApi~refreshJobStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:ai/skymind/skil/model/JobEntity}
     */
    this.refreshJobStatus = function(jobId, callback) {
      var postBody = null;

      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling refreshJobStatus");
      }


      var pathParams = {
        'jobId': jobId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = JobEntity;

      return this.apiClient.callApi(
        '/jobs/{jobId}/refresh', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the runAJob operation.
     * @callback module:ai/skymind/skil/JobApi~runAJobCallback
     * @param {String} error Error message, if any.
     * @param {module:ai/skymind/skil/model/JobEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start running an (already created) job on the remote resource
     * @param {Number} jobId Job ID
     * @param {module:ai/skymind/skil/JobApi~runAJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:ai/skymind/skil/model/JobEntity}
     */
    this.runAJob = function(jobId, callback) {
      var postBody = null;

      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling runAJob");
      }


      var pathParams = {
        'jobId': jobId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = JobEntity;

      return this.apiClient.callApi(
        '/jobs/{jobId}/run', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));

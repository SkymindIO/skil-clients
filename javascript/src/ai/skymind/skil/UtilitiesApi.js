/**
 * Endpoints
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-beta
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'ai/skymind/skil/model/FileUploadList'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../ai/skymind/skil/model/FileUploadList'));
  } else {
    // Browser globals (root is window)
    if (!root.SkilClient) {
      root.SkilClient = {};
    }
    root.SkilClient.UtilitiesApi = factory(root.SkilClient.ApiClient, root.SkilClient.FileUploadList);
  }
}(this, function(ApiClient, FileUploadList) {
  'use strict';

  /**
   * Utilities service.
   * @module ai/skymind/skil/UtilitiesApi
   * @version 1.2.0
   */

  /**
   * Constructs a new UtilitiesApi. 
   * @alias module:ai/skymind/skil/UtilitiesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the upload operation.
     * @callback module:ai/skymind/skil/UtilitiesApi~uploadCallback
     * @param {String} error Error message, if any.
     * @param {module:ai/skymind/skil/model/FileUploadList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload a model file to SKIL for import.
     * @param {Object} opts Optional parameters
     * @param {File} opts.file The file to upload.
     * @param {module:ai/skymind/skil/UtilitiesApi~uploadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:ai/skymind/skil/model/FileUploadList}
     */
    this.upload = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'file': opts['file']
      };

      var authNames = ['api_key'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = FileUploadList;

      return this.apiClient.callApi(
        '/api/upload/model', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));

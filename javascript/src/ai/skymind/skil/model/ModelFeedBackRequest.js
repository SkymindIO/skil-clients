/**
 * Endpoints
 * Endpoints API for different services in SKIL
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelFeedBackRequest model module.
 * @module ai/skymind/skil/model/ModelFeedBackRequest
 * @version 1.2.2.0
 */
class ModelFeedBackRequest {
    /**
     * Constructs a new <code>ModelFeedBackRequest</code>.
     * @alias module:ai/skymind/skil/model/ModelFeedBackRequest
     */
    constructor() { 
        
        ModelFeedBackRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelFeedBackRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:ai/skymind/skil/model/ModelFeedBackRequest} obj Optional instance to populate.
     * @return {module:ai/skymind/skil/model/ModelFeedBackRequest} The populated <code>ModelFeedBackRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelFeedBackRequest();

            if (data.hasOwnProperty('batchId')) {
                obj['batchId'] = ApiClient.convertToType(data['batchId'], 'String');
            }
            if (data.hasOwnProperty('guesses')) {
                obj['guesses'] = ApiClient.convertToType(data['guesses'], ['String']);
            }
            if (data.hasOwnProperty('correct')) {
                obj['correct'] = ApiClient.convertToType(data['correct'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * The GUID of the minibatch this feedback corresponds to
 * @member {String} batchId
 */
ModelFeedBackRequest.prototype['batchId'] = undefined;

/**
 * The guessed label IDs by the model
 * @member {Array.<String>} guesses
 */
ModelFeedBackRequest.prototype['guesses'] = undefined;

/**
 * The actual label IDs
 * @member {Array.<String>} correct
 */
ModelFeedBackRequest.prototype['correct'] = undefined;






export default ModelFeedBackRequest;


=begin
#Endpoints

#Endpoints API for different services in SKIL

OpenAPI spec version: 1.2.0-beta

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0-SNAPSHOT

=end

require 'uri'

module SkilCient
  class KNNApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Runs knn on the given index with the given k
    # Runs knn on the given index with the given k (note that this is for data already within the existing dataset not new data)
    # @param deployment_name Name of the deployment group
    # @param version_name Version name of the endpoint. The default value is \&quot;default\&quot;
    # @param knn_name ID or name of the deployed knn
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [NearestNeighborsResults]
    def knn(deployment_name, version_name, knn_name, body, opts = {})
      data, _status_code, _headers = knn_with_http_info(deployment_name, version_name, knn_name, body, opts)
      data
    end

    # Runs knn on the given index with the given k
    # Runs knn on the given index with the given k (note that this is for data already within the existing dataset not new data)
    # @param deployment_name Name of the deployment group
    # @param version_name Version name of the endpoint. The default value is \&quot;default\&quot;
    # @param knn_name ID or name of the deployed knn
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(NearestNeighborsResults, Fixnum, Hash)>] NearestNeighborsResults data, response status code and response headers
    def knn_with_http_info(deployment_name, version_name, knn_name, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: KNNApi.knn ...'
      end
      # verify the required parameter 'deployment_name' is set
      if @api_client.config.client_side_validation && deployment_name.nil?
        fail ArgumentError, "Missing the required parameter 'deployment_name' when calling KNNApi.knn"
      end
      # verify the required parameter 'version_name' is set
      if @api_client.config.client_side_validation && version_name.nil?
        fail ArgumentError, "Missing the required parameter 'version_name' when calling KNNApi.knn"
      end
      # verify the required parameter 'knn_name' is set
      if @api_client.config.client_side_validation && knn_name.nil?
        fail ArgumentError, "Missing the required parameter 'knn_name' when calling KNNApi.knn"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling KNNApi.knn"
      end
      # resource path
      local_var_path = '/endpoints/{deploymentName}/knn/{knnName}/{versionName}/knn'.sub('{' + 'deploymentName' + '}', deployment_name.to_s).sub('{' + 'versionName' + '}', version_name.to_s).sub('{' + 'knnName' + '}', knn_name.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'NearestNeighborsResults')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: KNNApi#knn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Run a k nearest neighbors search on a NEW data point
    # @param deployment_name Name of the deployment group
    # @param version_name Version name of the endpoint. The default value is \&quot;default\&quot;
    # @param knn_name ID or name of the deployed knn
    # @param body The input NDArray
    # @param [Hash] opts the optional parameters
    # @return [NearestNeighborsResults]
    def knnnew(deployment_name, version_name, knn_name, body, opts = {})
      data, _status_code, _headers = knnnew_with_http_info(deployment_name, version_name, knn_name, body, opts)
      data
    end

    # Run a k nearest neighbors search on a NEW data point
    # @param deployment_name Name of the deployment group
    # @param version_name Version name of the endpoint. The default value is \&quot;default\&quot;
    # @param knn_name ID or name of the deployed knn
    # @param body The input NDArray
    # @param [Hash] opts the optional parameters
    # @return [Array<(NearestNeighborsResults, Fixnum, Hash)>] NearestNeighborsResults data, response status code and response headers
    def knnnew_with_http_info(deployment_name, version_name, knn_name, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: KNNApi.knnnew ...'
      end
      # verify the required parameter 'deployment_name' is set
      if @api_client.config.client_side_validation && deployment_name.nil?
        fail ArgumentError, "Missing the required parameter 'deployment_name' when calling KNNApi.knnnew"
      end
      # verify the required parameter 'version_name' is set
      if @api_client.config.client_side_validation && version_name.nil?
        fail ArgumentError, "Missing the required parameter 'version_name' when calling KNNApi.knnnew"
      end
      # verify the required parameter 'knn_name' is set
      if @api_client.config.client_side_validation && knn_name.nil?
        fail ArgumentError, "Missing the required parameter 'knn_name' when calling KNNApi.knnnew"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling KNNApi.knnnew"
      end
      # resource path
      local_var_path = '/endpoints/{deploymentName}/knn/{knnName}/{versionName}/knnnew'.sub('{' + 'deploymentName' + '}', deployment_name.to_s).sub('{' + 'versionName' + '}', version_name.to_s).sub('{' + 'knnName' + '}', knn_name.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'NearestNeighborsResults')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: KNNApi#knnnew\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end

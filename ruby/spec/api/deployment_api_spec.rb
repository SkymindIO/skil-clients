=begin
#Endpoints

#Endpoints API for different services in SKIL

OpenAPI spec version: 1.2.0-beta

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SkilCient::DeploymentApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DeploymentApi' do
  before do
    # run before each test
    @instance = SkilCient::DeploymentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DeploymentApi' do
    it 'should create an instance of DeploymentApi' do
      expect(@instance).to be_instance_of(SkilCient::DeploymentApi)
    end
  end

  # unit tests for delete_model
  # Delete a model by deployment and model id
  # @param deployment_id ID deployment group
  # @param model_id the id of the deployed model
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'delete_model test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deploy_model
  # Deploy a model in a deployment group.
  # @param deployment_id ID deployment group
  # @param body the model import request
  # @param [Hash] opts the optional parameters
  # @return [ModelEntity]
  describe 'deploy_model test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deployment_create
  # Create a new deployment group.
  # @param body the deployment request
  # @param [Hash] opts the optional parameters
  # @return [DeploymentResponse]
  describe 'deployment_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deployment_delete
  # Delete a deployment by id
  # @param deployment_id Id of the deployment group
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'deployment_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deployment_get
  # Get a deployment details by id
  # @param deployment_id Id of the deployment group
  # @param [Hash] opts the optional parameters
  # @return [DeploymentResponse]
  describe 'deployment_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deployments
  # Get a list of deployments
  # @param [Hash] opts the optional parameters
  # @return [Array<DeploymentResponse>]
  describe 'deployments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for model_state_change
  # Modify the state (start/stop) of a deployed model
  # @param deployment_id ID deployment group
  # @param model_id the id of the deployed model
  # @param body the model state object
  # @param [Hash] opts the optional parameters
  # @return [ModelEntity]
  describe 'model_state_change test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for models
  # Retrieve a list of all the deployed models given a deployment id
  # @param deployment_id ID deployment group
  # @param [Hash] opts the optional parameters
  # @return [Array<ModelEntity>]
  describe 'models test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reimport_model
  # Reimport a model to a previous deployed model in a deployment
  # @param deployment_id ID deployment group
  # @param model_id the id of the deployed model
  # @param body the deployment request
  # @param [Hash] opts the optional parameters
  # @return [ModelEntity]
  describe 'reimport_model test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

=begin
#Endpoints

#Endpoints API for different services in SKIL

OpenAPI spec version: 1.2.0-beta

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SkilCient::ResourceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ResourceApi' do
  before do
    # run before each test
    @instance = SkilCient::ResourceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ResourceApi' do
    it 'should create an instance of ResourceApi' do
      expect(@instance).to be_instance_of(SkilCient::ResourceApi)
    end
  end

  # unit tests for add_credentials
  # Adds credentials
  # @param add_credentials_request Add credentials request object
  # @param [Hash] opts the optional parameters
  # @return [ResourceCredentials]
  describe 'add_credentials test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_resource
  # Adds a resource
  # @param add_resource_request The Add resource request object
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'add_resource test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_resource_group
  # Adds a resource group
  # @param group_name Name of the resource group
  # @param [Hash] opts the optional parameters
  # @return [ResourceGroup]
  describe 'add_resource_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_resource_to_group
  # Adds a resource to a resource group
  # @param resource_group_id ID of the resource group
  # @param resource_id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_resource_to_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_credentials_by_id
  # Delete credentials given an ID
  # @param credential_id Credentials ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_credentials_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_resource_by_id
  # Delete the resource with the specified resource ID
  # @param resource_id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Resource]
  describe 'delete_resource_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_resource_from_group
  # Removes a resource from a resource group
  # @param resource_group_id ID of the resource group
  # @param resource_id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_resource_from_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_resource_group_by_id
  # Delete the resource group with the specified resource group ID
  # @param resource_group_id ID of the resource group
  # @param [Hash] opts the optional parameters
  # @return [ResourceGroup]
  describe 'delete_resource_group_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credentials_by_id
  # Get credentials given an ID
  # @param credential_id Credentials ID
  # @param [Hash] opts the optional parameters
  # @return [ResourceCredentials]
  describe 'get_credentials_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_by_id
  # Get the resource with the specified resource ID
  # @param resource_id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Resource]
  describe 'get_resource_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_by_sub_type
  # Get all the resources with the specified resource subtype
  # @param resource_sub_type Subtype of the resource
  # @param [Hash] opts the optional parameters
  # @return [Array<Resource>]
  describe 'get_resource_by_sub_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_by_type
  # Get all the resources with the specified resource type
  # @param resource_type Type of the resource
  # @param [Hash] opts the optional parameters
  # @return [Array<Resource>]
  describe 'get_resource_by_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_details_by_id
  # Get the resource details with the specified resource ID
  # Get the details for the resource, for the given ID. Note that a &#39;ResourceDetails&#39; object contains specific information about the resource (such as region for an AWS resource, or URI for a HDFS resource), where as the &#39;Resource&#39; object contains only general information (name, id, type, subtype). 
  # @param resource_id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_resource_details_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_group_by_id
  # Get the resource group with the specified resource group ID
  # @param resource_group_id ID of the resource group
  # @param [Hash] opts the optional parameters
  # @return [ResourceGroup]
  describe 'get_resource_group_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_groups
  # Get a list of all the resource groups
  # @param [Hash] opts the optional parameters
  # @return [Array<ResourceGroup>]
  describe 'get_resource_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resources
  # A list of all known/registered resources, of all types
  # @param [Hash] opts the optional parameters
  # @return [Array<Resource>]
  describe 'get_resources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resources_from_group
  # Get all resources from a resource group
  # @param resource_group_id ID of the resource group
  # @param [Hash] opts the optional parameters
  # @return [Array<Resource>]
  describe 'get_resources_from_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

/**
 * Endpoints
 * Endpoints API for different services in SKIL
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ai.skymind.skil.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class BestModel implements Serializable {
  
  @SerializedName("ids")
  private List<String> ids = null;
  public enum ColumnNameMetricEnum {
     f1,  precision,  recall,  accuracy,  rmse,  auc,  meanAbsoluteError,  meanRelativeError,  r2, 
  };
  @SerializedName("columnNameMetric")
  private ColumnNameMetricEnum columnNameMetric = null;
  public enum EvalTypeEnum {
     ROC_BINARY,  ROC,  EVALUATION_BINARY,  EVALUATION,  REGRESSON_EVALUATION,  ROC_MULTI_CLASS, 
  };
  @SerializedName("evalType")
  private EvalTypeEnum evalType = null;

  /**
   * the list of GUIDs for the models to get the best model from
   **/
  @ApiModelProperty(value = "the list of GUIDs for the models to get the best model from")
  public List<String> getIds() {
    return ids;
  }
  public void setIds(List<String> ids) {
    this.ids = ids;
  }

  /**
   * Name of the column metric (in an evaluation result) to get the best model from.
   **/
  @ApiModelProperty(value = "Name of the column metric (in an evaluation result) to get the best model from.")
  public ColumnNameMetricEnum getColumnNameMetric() {
    return columnNameMetric;
  }
  public void setColumnNameMetric(ColumnNameMetricEnum columnNameMetric) {
    this.columnNameMetric = columnNameMetric;
  }

  /**
   * the evaluation type to aggregate for each model's revisions
   **/
  @ApiModelProperty(value = "the evaluation type to aggregate for each model's revisions")
  public EvalTypeEnum getEvalType() {
    return evalType;
  }
  public void setEvalType(EvalTypeEnum evalType) {
    this.evalType = evalType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BestModel bestModel = (BestModel) o;
    return (this.ids == null ? bestModel.ids == null : this.ids.equals(bestModel.ids)) &&
        (this.columnNameMetric == null ? bestModel.columnNameMetric == null : this.columnNameMetric.equals(bestModel.columnNameMetric)) &&
        (this.evalType == null ? bestModel.evalType == null : this.evalType.equals(bestModel.evalType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.ids == null ? 0: this.ids.hashCode());
    result = 31 * result + (this.columnNameMetric == null ? 0: this.columnNameMetric.hashCode());
    result = 31 * result + (this.evalType == null ? 0: this.evalType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BestModel {\n");
    
    sb.append("  ids: ").append(ids).append("\n");
    sb.append("  columnNameMetric: ").append(columnNameMetric).append("\n");
    sb.append("  evalType: ").append(evalType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

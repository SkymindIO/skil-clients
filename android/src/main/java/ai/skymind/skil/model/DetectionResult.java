/**
 * Endpoints
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-rc1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ai.skymind.skil.model;

import ai.skymind.skil.model.DetectedObject;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class DetectionResult implements Serializable {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("objects")
  private List<DetectedObject> objects = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<DetectedObject> getObjects() {
    return objects;
  }
  public void setObjects(List<DetectedObject> objects) {
    this.objects = objects;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetectionResult detectionResult = (DetectionResult) o;
    return (this.id == null ? detectionResult.id == null : this.id.equals(detectionResult.id)) &&
        (this.objects == null ? detectionResult.objects == null : this.objects.equals(detectionResult.objects));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.objects == null ? 0: this.objects.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetectionResult {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  objects: ").append(objects).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

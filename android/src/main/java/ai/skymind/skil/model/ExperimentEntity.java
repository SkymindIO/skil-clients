/**
 * Endpoints
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-rc1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ai.skymind.skil.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class ExperimentEntity implements Serializable {
  
  @SerializedName("bestModelId")
  private String bestModelId = null;
  @SerializedName("inputDataUri")
  private String inputDataUri = null;
  @SerializedName("experimentId")
  private String experimentId = null;
  @SerializedName("experimentName")
  private String experimentName = null;
  @SerializedName("experimentDescription")
  private String experimentDescription = null;
  @SerializedName("notebookJson")
  private String notebookJson = null;
  @SerializedName("notebookUrl")
  private String notebookUrl = null;
  @SerializedName("zeppelinId")
  private String zeppelinId = null;
  @SerializedName("modelHistoryId")
  private String modelHistoryId = null;
  @SerializedName("lastUpdated")
  private Long lastUpdated = null;

  /**
   * GUID of the best selected model in an experiment
   **/
  @ApiModelProperty(value = "GUID of the best selected model in an experiment")
  public String getBestModelId() {
    return bestModelId;
  }
  public void setBestModelId(String bestModelId) {
    this.bestModelId = bestModelId;
  }

  /**
   * Input data URI
   **/
  @ApiModelProperty(value = "Input data URI")
  public String getInputDataUri() {
    return inputDataUri;
  }
  public void setInputDataUri(String inputDataUri) {
    this.inputDataUri = inputDataUri;
  }

  /**
   * GUID of the experiment
   **/
  @ApiModelProperty(value = "GUID of the experiment")
  public String getExperimentId() {
    return experimentId;
  }
  public void setExperimentId(String experimentId) {
    this.experimentId = experimentId;
  }

  /**
   * Experiment's name
   **/
  @ApiModelProperty(value = "Experiment's name")
  public String getExperimentName() {
    return experimentName;
  }
  public void setExperimentName(String experimentName) {
    this.experimentName = experimentName;
  }

  /**
   * Experiment's description
   **/
  @ApiModelProperty(value = "Experiment's description")
  public String getExperimentDescription() {
    return experimentDescription;
  }
  public void setExperimentDescription(String experimentDescription) {
    this.experimentDescription = experimentDescription;
  }

  /**
   * The associated Zeppelin notebook JSON string
   **/
  @ApiModelProperty(value = "The associated Zeppelin notebook JSON string")
  public String getNotebookJson() {
    return notebookJson;
  }
  public void setNotebookJson(String notebookJson) {
    this.notebookJson = notebookJson;
  }

  /**
   * URL of the associated Zeppelin notebook
   **/
  @ApiModelProperty(value = "URL of the associated Zeppelin notebook")
  public String getNotebookUrl() {
    return notebookUrl;
  }
  public void setNotebookUrl(String notebookUrl) {
    this.notebookUrl = notebookUrl;
  }

  /**
   * Zeppelin ID
   **/
  @ApiModelProperty(value = "Zeppelin ID")
  public String getZeppelinId() {
    return zeppelinId;
  }
  public void setZeppelinId(String zeppelinId) {
    this.zeppelinId = zeppelinId;
  }

  /**
   * Id of the model history / workspace
   **/
  @ApiModelProperty(value = "Id of the model history / workspace")
  public String getModelHistoryId() {
    return modelHistoryId;
  }
  public void setModelHistoryId(String modelHistoryId) {
    this.modelHistoryId = modelHistoryId;
  }

  /**
   * Indicates the time when experiment was last updated
   **/
  @ApiModelProperty(value = "Indicates the time when experiment was last updated")
  public Long getLastUpdated() {
    return lastUpdated;
  }
  public void setLastUpdated(Long lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExperimentEntity experimentEntity = (ExperimentEntity) o;
    return (this.bestModelId == null ? experimentEntity.bestModelId == null : this.bestModelId.equals(experimentEntity.bestModelId)) &&
        (this.inputDataUri == null ? experimentEntity.inputDataUri == null : this.inputDataUri.equals(experimentEntity.inputDataUri)) &&
        (this.experimentId == null ? experimentEntity.experimentId == null : this.experimentId.equals(experimentEntity.experimentId)) &&
        (this.experimentName == null ? experimentEntity.experimentName == null : this.experimentName.equals(experimentEntity.experimentName)) &&
        (this.experimentDescription == null ? experimentEntity.experimentDescription == null : this.experimentDescription.equals(experimentEntity.experimentDescription)) &&
        (this.notebookJson == null ? experimentEntity.notebookJson == null : this.notebookJson.equals(experimentEntity.notebookJson)) &&
        (this.notebookUrl == null ? experimentEntity.notebookUrl == null : this.notebookUrl.equals(experimentEntity.notebookUrl)) &&
        (this.zeppelinId == null ? experimentEntity.zeppelinId == null : this.zeppelinId.equals(experimentEntity.zeppelinId)) &&
        (this.modelHistoryId == null ? experimentEntity.modelHistoryId == null : this.modelHistoryId.equals(experimentEntity.modelHistoryId)) &&
        (this.lastUpdated == null ? experimentEntity.lastUpdated == null : this.lastUpdated.equals(experimentEntity.lastUpdated));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.bestModelId == null ? 0: this.bestModelId.hashCode());
    result = 31 * result + (this.inputDataUri == null ? 0: this.inputDataUri.hashCode());
    result = 31 * result + (this.experimentId == null ? 0: this.experimentId.hashCode());
    result = 31 * result + (this.experimentName == null ? 0: this.experimentName.hashCode());
    result = 31 * result + (this.experimentDescription == null ? 0: this.experimentDescription.hashCode());
    result = 31 * result + (this.notebookJson == null ? 0: this.notebookJson.hashCode());
    result = 31 * result + (this.notebookUrl == null ? 0: this.notebookUrl.hashCode());
    result = 31 * result + (this.zeppelinId == null ? 0: this.zeppelinId.hashCode());
    result = 31 * result + (this.modelHistoryId == null ? 0: this.modelHistoryId.hashCode());
    result = 31 * result + (this.lastUpdated == null ? 0: this.lastUpdated.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExperimentEntity {\n");
    
    sb.append("  bestModelId: ").append(bestModelId).append("\n");
    sb.append("  inputDataUri: ").append(inputDataUri).append("\n");
    sb.append("  experimentId: ").append(experimentId).append("\n");
    sb.append("  experimentName: ").append(experimentName).append("\n");
    sb.append("  experimentDescription: ").append(experimentDescription).append("\n");
    sb.append("  notebookJson: ").append(notebookJson).append("\n");
    sb.append("  notebookUrl: ").append(notebookUrl).append("\n");
    sb.append("  zeppelinId: ").append(zeppelinId).append("\n");
    sb.append("  modelHistoryId: ").append(modelHistoryId).append("\n");
    sb.append("  lastUpdated: ").append(lastUpdated).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

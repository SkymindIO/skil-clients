//
// ModelEntity.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class ModelEntity: JSONEncodable {

    public enum ModelType: String { 
        case transform = "transform"
        case model = "model"
        case knn = "knn"
    }
    public enum State: String { 
        case created = "created"
        case starting = "starting"
        case started = "started"
        case stopping = "stopping"
        case stopped = "stopped"
        case unhealthy = "unhealthy"
        case failed = "failed"
    }
    public enum ModelState: String { 
        case created = "CREATED"
        case starting = "STARTING"
        case started = "STARTED"
        case stopping = "STOPPING"
        case stopped = "STOPPED"
        case unhealthy = "UNHEALTHY"
        case failed = "FAILED"
    }
    public var id: Int64?
    public var created: Int64?
    public var updated: Int64?
    public var modelType: ModelType?
    public var deploymentId: Int64?
    public var name: String?
    public var scale: Double?
    public var fileLocation: String?
    public var state: State?
    public var jvmArgs: String?
    public var subType: String?
    public var labelsFileLocation: String?
    public var extraArgs: String?
    public var launchPolicy: Any?
    public var modelState: ModelState?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["id"] = self.id?.encodeToJSON()
        nillableDictionary["created"] = self.created?.encodeToJSON()
        nillableDictionary["updated"] = self.updated?.encodeToJSON()
        nillableDictionary["modelType"] = self.modelType?.rawValue
        nillableDictionary["deploymentId"] = self.deploymentId?.encodeToJSON()
        nillableDictionary["name"] = self.name
        nillableDictionary["scale"] = self.scale
        nillableDictionary["fileLocation"] = self.fileLocation
        nillableDictionary["state"] = self.state?.rawValue
        nillableDictionary["jvmArgs"] = self.jvmArgs
        nillableDictionary["subType"] = self.subType
        nillableDictionary["labelsFileLocation"] = self.labelsFileLocation
        nillableDictionary["extraArgs"] = self.extraArgs
        nillableDictionary["launchPolicy"] = self.launchPolicy
        nillableDictionary["modelState"] = self.modelState?.rawValue

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}


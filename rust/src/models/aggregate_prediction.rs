/*
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;


#[derive(Debug, Serialize, Deserialize)]
pub struct AggregatePrediction {
    /// GUID of model instance
    #[serde(rename = "modelId", skip_serializing_if = "Option::is_none")]
    pub model_id: Option<String>,
    /// the evaluation type to aggregate
    #[serde(rename = "evalType", skip_serializing_if = "Option::is_none")]
    pub eval_type: Option<String>,
}

impl AggregatePrediction {
    pub fn new() -> AggregatePrediction {
        AggregatePrediction {
            model_id: None,
            eval_type: None,
        }
    }
}

/// the evaluation type to aggregate
#[derive(Debug, Serialize, Deserialize)]
pub enum EvalType {
    #[serde(rename = "ROC_BINARY")]
    ROCBINARY,
    #[serde(rename = "ROC")]
    ROC,
    #[serde(rename = "EVALUATION_BINARY")]
    EVALUATIONBINARY,
    #[serde(rename = "EVALUATION")]
    EVALUATION,
    #[serde(rename = "REGRESSON_EVALUATION")]
    REGRESSONEVALUATION,
    #[serde(rename = "ROC_MULTI_CLASS")]
    ROCMULTICLASS,
}


/*
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;


#[derive(Debug, Serialize, Deserialize)]
pub struct YarnResourceDetails {
    #[serde(rename = "@class", skip_serializing_if = "Option::is_none")]
    pub class: Option<String>,
    /// ID of the resource
    #[serde(rename = "resourceId", skip_serializing_if = "Option::is_none")]
    pub resource_id: Option<i64>,
    /// Resource type
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    /// Resource subtype
    #[serde(rename = "subType", skip_serializing_if = "Option::is_none")]
    pub sub_type: Option<String>,
    /// Local Spark Home path
    #[serde(rename = "localSparkHome", skip_serializing_if = "Option::is_none")]
    pub local_spark_home: Option<String>,
}

impl YarnResourceDetails {
    pub fn new() -> YarnResourceDetails {
        YarnResourceDetails {
            class: None,
            resource_id: None,
            _type: None,
            sub_type: None,
            local_spark_home: None,
        }
    }
}

/// Resource type
#[derive(Debug, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "COMPUTE")]
    COMPUTE,
}
/// Resource subtype
#[derive(Debug, Serialize, Deserialize)]
pub enum SubType {
    #[serde(rename = "YARN")]
    YARN,
}


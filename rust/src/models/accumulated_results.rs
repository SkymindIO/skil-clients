/* 
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-rc1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AccumulatedResults {
  #[serde(rename = "accumulatedDataWithLabels")]
  accumulated_data_with_labels: Option<i32>,
  #[serde(rename = "accumulatedDataWithOutLabels")]
  accumulated_data_with_out_labels: Option<i32>
}

impl AccumulatedResults {
  pub fn new() -> AccumulatedResults {
    AccumulatedResults {
      accumulated_data_with_labels: None,
      accumulated_data_with_out_labels: None
    }
  }

  pub fn set_accumulated_data_with_labels(&mut self, accumulated_data_with_labels: i32) {
    self.accumulated_data_with_labels = Some(accumulated_data_with_labels);
  }

  pub fn with_accumulated_data_with_labels(mut self, accumulated_data_with_labels: i32) -> AccumulatedResults {
    self.accumulated_data_with_labels = Some(accumulated_data_with_labels);
    self
  }

  pub fn accumulated_data_with_labels(&self) -> Option<&i32> {
    self.accumulated_data_with_labels.as_ref()
  }

  pub fn reset_accumulated_data_with_labels(&mut self) {
    self.accumulated_data_with_labels = None;
  }

  pub fn set_accumulated_data_with_out_labels(&mut self, accumulated_data_with_out_labels: i32) {
    self.accumulated_data_with_out_labels = Some(accumulated_data_with_out_labels);
  }

  pub fn with_accumulated_data_with_out_labels(mut self, accumulated_data_with_out_labels: i32) -> AccumulatedResults {
    self.accumulated_data_with_out_labels = Some(accumulated_data_with_out_labels);
    self
  }

  pub fn accumulated_data_with_out_labels(&self) -> Option<&i32> {
    self.accumulated_data_with_out_labels.as_ref()
  }

  pub fn reset_accumulated_data_with_out_labels(&mut self) {
    self.accumulated_data_with_out_labels = None;
  }

}




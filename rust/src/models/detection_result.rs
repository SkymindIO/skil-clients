/* 
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-rc1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DetectionResult {
  #[serde(rename = "id")]
  id: Option<String>,
  #[serde(rename = "objects")]
  objects: Option<Vec<::models::DetectedObject>>
}

impl DetectionResult {
  pub fn new() -> DetectionResult {
    DetectionResult {
      id: None,
      objects: None
    }
  }

  pub fn set_id(&mut self, id: String) {
    self.id = Some(id);
  }

  pub fn with_id(mut self, id: String) -> DetectionResult {
    self.id = Some(id);
    self
  }

  pub fn id(&self) -> Option<&String> {
    self.id.as_ref()
  }

  pub fn reset_id(&mut self) {
    self.id = None;
  }

  pub fn set_objects(&mut self, objects: Vec<::models::DetectedObject>) {
    self.objects = Some(objects);
  }

  pub fn with_objects(mut self, objects: Vec<::models::DetectedObject>) -> DetectionResult {
    self.objects = Some(objects);
    self
  }

  pub fn objects(&self) -> Option<&Vec<::models::DetectedObject>> {
    self.objects.as_ref()
  }

  pub fn reset_objects(&mut self) {
    self.objects = None;
  }

}




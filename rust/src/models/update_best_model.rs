/* 
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-rc1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct UpdateBestModel {
  /// GUID of the experiment to update.
  #[serde(rename = "experimentId")]
  experiment_id: Option<String>,
  /// GUID of the model to set as the best model.
  #[serde(rename = "bestModelId")]
  best_model_id: Option<String>
}

impl UpdateBestModel {
  pub fn new() -> UpdateBestModel {
    UpdateBestModel {
      experiment_id: None,
      best_model_id: None
    }
  }

  pub fn set_experiment_id(&mut self, experiment_id: String) {
    self.experiment_id = Some(experiment_id);
  }

  pub fn with_experiment_id(mut self, experiment_id: String) -> UpdateBestModel {
    self.experiment_id = Some(experiment_id);
    self
  }

  pub fn experiment_id(&self) -> Option<&String> {
    self.experiment_id.as_ref()
  }

  pub fn reset_experiment_id(&mut self) {
    self.experiment_id = None;
  }

  pub fn set_best_model_id(&mut self, best_model_id: String) {
    self.best_model_id = Some(best_model_id);
  }

  pub fn with_best_model_id(mut self, best_model_id: String) -> UpdateBestModel {
    self.best_model_id = Some(best_model_id);
    self
  }

  pub fn best_model_id(&self) -> Option<&String> {
    self.best_model_id.as_ref()
  }

  pub fn reset_best_model_id(&mut self) {
    self.best_model_id = None;
  }

}




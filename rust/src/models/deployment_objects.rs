/* 
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-rc1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DeploymentObjects {
  #[serde(rename = "models")]
  models: Option<Vec<::models::ModelResponse>>,
  #[serde(rename = "transforms")]
  transforms: Option<Vec<::models::ModelResponse>>,
  #[serde(rename = "knn")]
  knn: Option<Vec<::models::ModelResponse>>
}

impl DeploymentObjects {
  pub fn new() -> DeploymentObjects {
    DeploymentObjects {
      models: None,
      transforms: None,
      knn: None
    }
  }

  pub fn set_models(&mut self, models: Vec<::models::ModelResponse>) {
    self.models = Some(models);
  }

  pub fn with_models(mut self, models: Vec<::models::ModelResponse>) -> DeploymentObjects {
    self.models = Some(models);
    self
  }

  pub fn models(&self) -> Option<&Vec<::models::ModelResponse>> {
    self.models.as_ref()
  }

  pub fn reset_models(&mut self) {
    self.models = None;
  }

  pub fn set_transforms(&mut self, transforms: Vec<::models::ModelResponse>) {
    self.transforms = Some(transforms);
  }

  pub fn with_transforms(mut self, transforms: Vec<::models::ModelResponse>) -> DeploymentObjects {
    self.transforms = Some(transforms);
    self
  }

  pub fn transforms(&self) -> Option<&Vec<::models::ModelResponse>> {
    self.transforms.as_ref()
  }

  pub fn reset_transforms(&mut self) {
    self.transforms = None;
  }

  pub fn set_knn(&mut self, knn: Vec<::models::ModelResponse>) {
    self.knn = Some(knn);
  }

  pub fn with_knn(mut self, knn: Vec<::models::ModelResponse>) -> DeploymentObjects {
    self.knn = Some(knn);
    self
  }

  pub fn knn(&self) -> Option<&Vec<::models::ModelResponse>> {
    self.knn.as_ref()
  }

  pub fn reset_knn(&mut self) {
    self.knn = None;
  }

}




/*
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;


#[derive(Debug, Serialize, Deserialize)]
pub struct JobEntity {
    /// Job ID
    #[serde(rename = "jobId", skip_serializing_if = "Option::is_none")]
    pub job_id: Option<i64>,
    /// Whether a job is for training or inference
    #[serde(rename = "jobType", skip_serializing_if = "Option::is_none")]
    pub job_type: Option<String>,
    /// Compute resource ID
    #[serde(rename = "computeResourceId", skip_serializing_if = "Option::is_none")]
    pub compute_resource_id: Option<i64>,
    /// Storage resource ID
    #[serde(rename = "storageResourceId", skip_serializing_if = "Option::is_none")]
    pub storage_resource_id: Option<i64>,
    /// Job arguments
    #[serde(rename = "jobArgs", skip_serializing_if = "Option::is_none")]
    pub job_args: Option<String>,
    /// Job run ID
    #[serde(rename = "runId", skip_serializing_if = "Option::is_none")]
    pub run_id: Option<String>,
    /// Job's status
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// Output file name
    #[serde(rename = "outputFileName", skip_serializing_if = "Option::is_none")]
    pub output_file_name: Option<String>,
}

impl JobEntity {
    pub fn new() -> JobEntity {
        JobEntity {
            job_id: None,
            job_type: None,
            compute_resource_id: None,
            storage_resource_id: None,
            job_args: None,
            run_id: None,
            status: None,
            output_file_name: None,
        }
    }
}

/// Whether a job is for training or inference
#[derive(Debug, Serialize, Deserialize)]
pub enum JobType {
    #[serde(rename = "TRAINING")]
    TRAINING,
    #[serde(rename = "INFERENCE")]
    INFERENCE,
}
/// Job's status
#[derive(Debug, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "PENDING")]
    PENDING,
    #[serde(rename = "RUNNING")]
    RUNNING,
    #[serde(rename = "CONTINUE")]
    _CONTINUE,
    #[serde(rename = "COMPLETED")]
    COMPLETED,
    #[serde(rename = "CANCELLED")]
    CANCELLED,
    #[serde(rename = "FAILED")]
    FAILED,
    #[serde(rename = "INTERRUPTED")]
    INTERRUPTED,
}


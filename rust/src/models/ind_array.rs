/*
 * Endpoints
 *
 * Endpoints API for different services in SKIL
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;


#[derive(Debug, Serialize, Deserialize)]
pub struct IndArray {
    #[serde(rename = "array", skip_serializing_if = "Option::is_none")]
    pub array: Option<String>,
    #[serde(rename = "shape", skip_serializing_if = "Option::is_none")]
    pub shape: Option<Vec<i32>>,
    #[serde(rename = "ordering", skip_serializing_if = "Option::is_none")]
    pub ordering: Option<String>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<f32>>,
    #[serde(rename = "dataType", skip_serializing_if = "Option::is_none")]
    pub data_type: Option<String>,
}

impl IndArray {
    pub fn new() -> IndArray {
        IndArray {
            array: None,
            shape: None,
            ordering: None,
            data: None,
            data_type: None,
        }
    }
}

/// 
#[derive(Debug, Serialize, Deserialize)]
pub enum Ordering {
    #[serde(rename = "f")]
    F,
    #[serde(rename = "c")]
    C,
}
/// 
#[derive(Debug, Serialize, Deserialize)]
pub enum DataType {
    #[serde(rename = "INT8")]
    INT8,
    #[serde(rename = "UINT8")]
    UINT8,
    #[serde(rename = "INT16")]
    INT16,
    #[serde(rename = "FLOAT16")]
    FLOAT16,
}


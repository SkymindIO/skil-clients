/*
 * Endpoints
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ai.skymind.skil;

import ai.skymind.ApiException;
import ai.skymind.skil.model.AddCredentialsRequest;
import ai.skymind.skil.model.AddResourceRequest;
import ai.skymind.skil.model.Resource;
import ai.skymind.skil.model.ResourceCredentials;
import ai.skymind.skil.model.ResourceGroup;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResourceApi
 */
@Ignore
public class ResourceApiTest {

    private final ResourceApi api = new ResourceApi();

    
    /**
     * Adds credentials
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCredentialsTest() throws ApiException {
        AddCredentialsRequest addCredentialsRequest = null;
        ResourceCredentials response = api.addCredentials(addCredentialsRequest);

        // TODO: test validations
    }
    
    /**
     * Adds a resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addResourceTest() throws ApiException {
        AddResourceRequest addResourceRequest = null;
        Object response = api.addResource(addResourceRequest);

        // TODO: test validations
    }
    
    /**
     * Adds a resource group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addResourceGroupTest() throws ApiException {
        String groupName = null;
        ResourceGroup response = api.addResourceGroup(groupName);

        // TODO: test validations
    }
    
    /**
     * Adds a resource to a resource group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addResourceToGroupTest() throws ApiException {
        Long resourceGroupId = null;
        Long resourceId = null;
        api.addResourceToGroup(resourceGroupId, resourceId);

        // TODO: test validations
    }
    
    /**
     * Delete credentials given an ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCredentialsByIdTest() throws ApiException {
        Long credentialId = null;
        api.deleteCredentialsById(credentialId);

        // TODO: test validations
    }
    
    /**
     * Delete the resource with the specified resource ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteResourceByIdTest() throws ApiException {
        Long resourceId = null;
        Resource response = api.deleteResourceById(resourceId);

        // TODO: test validations
    }
    
    /**
     * Removes a resource from a resource group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteResourceFromGroupTest() throws ApiException {
        Long resourceGroupId = null;
        Long resourceId = null;
        api.deleteResourceFromGroup(resourceGroupId, resourceId);

        // TODO: test validations
    }
    
    /**
     * Delete the resource group with the specified resource group ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteResourceGroupByIdTest() throws ApiException {
        Long resourceGroupId = null;
        ResourceGroup response = api.deleteResourceGroupById(resourceGroupId);

        // TODO: test validations
    }
    
    /**
     * Get credentials given an ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCredentialsByIdTest() throws ApiException {
        Long credentialId = null;
        ResourceCredentials response = api.getCredentialsById(credentialId);

        // TODO: test validations
    }
    
    /**
     * Get the resource with the specified resource ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourceByIdTest() throws ApiException {
        Long resourceId = null;
        Resource response = api.getResourceById(resourceId);

        // TODO: test validations
    }
    
    /**
     * Get all the resources with the specified resource subtype
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourceBySubTypeTest() throws ApiException {
        String resourceSubType = null;
        List<Resource> response = api.getResourceBySubType(resourceSubType);

        // TODO: test validations
    }
    
    /**
     * Get all the resources with the specified resource type
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourceByTypeTest() throws ApiException {
        String resourceType = null;
        List<Resource> response = api.getResourceByType(resourceType);

        // TODO: test validations
    }
    
    /**
     * Get the resource details with the specified resource ID
     *
     * Get the details for the resource, for the given ID. Note that a &#39;ResourceDetails&#39; object contains specific information about the resource (such as region for an AWS resource, or URI for a HDFS resource), where as the &#39;Resource&#39; object contains only general information (name, id, type, subtype). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourceDetailsByIdTest() throws ApiException {
        Long resourceId = null;
        Object response = api.getResourceDetailsById(resourceId);

        // TODO: test validations
    }
    
    /**
     * Get the resource group with the specified resource group ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourceGroupByIdTest() throws ApiException {
        Long resourceGroupId = null;
        ResourceGroup response = api.getResourceGroupById(resourceGroupId);

        // TODO: test validations
    }
    
    /**
     * Get a list of all the resource groups
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourceGroupsTest() throws ApiException {
        List<ResourceGroup> response = api.getResourceGroups();

        // TODO: test validations
    }
    
    /**
     * A list of all known/registered resources, of all types
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourcesTest() throws ApiException {
        List<Resource> response = api.getResources();

        // TODO: test validations
    }
    
    /**
     * Get all resources from a resource group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourcesFromGroupTest() throws ApiException {
        Long resourceGroupId = null;
        List<Resource> response = api.getResourcesFromGroup(resourceGroupId);

        // TODO: test validations
    }
    
}

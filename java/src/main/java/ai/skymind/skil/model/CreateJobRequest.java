/*
 * Endpoints
 * Endpoints API for different services in SKIL
 *
 * OpenAPI spec version: 1.2.0-rc1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ai.skymind.skil.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CreateJobRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-23T14:57:38.954+02:00")
public class CreateJobRequest {
  @SerializedName("computeResourceId")
  private Long computeResourceId = null;

  @SerializedName("storageResourceId")
  private Long storageResourceId = null;

  @SerializedName("jobArgs")
  private String jobArgs = null;

  @SerializedName("outputFileName")
  private String outputFileName = null;

  public CreateJobRequest computeResourceId(Long computeResourceId) {
    this.computeResourceId = computeResourceId;
    return this;
  }

   /**
   * Compute resource ID
   * @return computeResourceId
  **/
  @ApiModelProperty(value = "Compute resource ID")
  public Long getComputeResourceId() {
    return computeResourceId;
  }

  public void setComputeResourceId(Long computeResourceId) {
    this.computeResourceId = computeResourceId;
  }

  public CreateJobRequest storageResourceId(Long storageResourceId) {
    this.storageResourceId = storageResourceId;
    return this;
  }

   /**
   * Storage resource ID
   * @return storageResourceId
  **/
  @ApiModelProperty(value = "Storage resource ID")
  public Long getStorageResourceId() {
    return storageResourceId;
  }

  public void setStorageResourceId(Long storageResourceId) {
    this.storageResourceId = storageResourceId;
  }

  public CreateJobRequest jobArgs(String jobArgs) {
    this.jobArgs = jobArgs;
    return this;
  }

   /**
   * Job arguments
   * @return jobArgs
  **/
  @ApiModelProperty(value = "Job arguments")
  public String getJobArgs() {
    return jobArgs;
  }

  public void setJobArgs(String jobArgs) {
    this.jobArgs = jobArgs;
  }

  public CreateJobRequest outputFileName(String outputFileName) {
    this.outputFileName = outputFileName;
    return this;
  }

   /**
   * Output file name
   * @return outputFileName
  **/
  @ApiModelProperty(value = "Output file name")
  public String getOutputFileName() {
    return outputFileName;
  }

  public void setOutputFileName(String outputFileName) {
    this.outputFileName = outputFileName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateJobRequest createJobRequest = (CreateJobRequest) o;
    return Objects.equals(this.computeResourceId, createJobRequest.computeResourceId) &&
        Objects.equals(this.storageResourceId, createJobRequest.storageResourceId) &&
        Objects.equals(this.jobArgs, createJobRequest.jobArgs) &&
        Objects.equals(this.outputFileName, createJobRequest.outputFileName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(computeResourceId, storageResourceId, jobArgs, outputFileName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateJobRequest {\n");
    
    sb.append("    computeResourceId: ").append(toIndentedString(computeResourceId)).append("\n");
    sb.append("    storageResourceId: ").append(toIndentedString(storageResourceId)).append("\n");
    sb.append("    jobArgs: ").append(toIndentedString(jobArgs)).append("\n");
    sb.append("    outputFileName: ").append(toIndentedString(outputFileName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

